"""Initial migration from models

Revision ID: 34fbca5b5f15
Revises:
Create Date: 2025-08-16 02:37:38.120209

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "34fbca5b5f15"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ai_avatars",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("avatar_url", sa.String(length=512), nullable=False),
        sa.Column("voice_id", sa.String(length=100), nullable=False),
        sa.Column("language", sa.String(length=20), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("ai_avatars", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_ai_avatars_id"), ["id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_ai_avatars_name"), ["name"], unique=False
        )

    op.create_table(
        "exercise_sets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "exercise_type",
            sa.Enum(
                "MULTIPLE_CHOICE",
                "FILL_IN_BLANK",
                "MATCHING",
                "TRUE_FALSE",
                "SHORT_ANSWER",
                "ESSAY",
                "LISTENING",
                "SPEAKING",
                "TRANSLATION",
                "DICTATION",
                name="exercisetype",
            ),
            nullable=True,
        ),
        sa.Column(
            "difficulty",
            sa.Enum(
                "BEGINNER",
                "ELEMENTARY",
                "PRE_INTERMEDIATE",
                "INTERMEDIATE",
                "UPPER_INTERMEDIATE",
                "ADVANCED",
                "PROFICIENCY",
                name="difficultylevel",
            ),
            nullable=True,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("exercise_sets", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_exercise_sets_id"), ["id"], unique=False
        )

    op.create_table(
        "forum_categories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    with op.batch_alter_table("forum_categories", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_forum_categories_id"), ["id"], unique=False
        )

    op.create_table(
        "pronunciation_phrases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("level", sa.String(), nullable=False),
        sa.Column("category", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table(
        "pronunciation_phrases", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_pronunciation_phrases_category"),
            ["category"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_pronunciation_phrases_id"), ["id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_pronunciation_phrases_level"),
            ["level"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_pronunciation_phrases_text"), ["text"], unique=False
        )

    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("permissions", sa.JSON(), nullable=True),
        sa.Column(
            "gpt4o_requests_limit",
            sa.Integer(),
            server_default="0",
            nullable=False,
        ),
        sa.Column(
            "stt_requests_limit",
            sa.Integer(),
            server_default="0",
            nullable=False,
        ),
        sa.Column(
            "tts_chars_limit", sa.Integer(), server_default="0", nullable=False
        ),
        sa.Column(
            "pronunciation_analysis_limit",
            sa.Integer(),
            server_default="0",
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("roles", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_roles_id"), ["id"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_roles_name"), ["name"], unique=True
        )

    op.create_table(
        "subscription_plans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("duration_days", sa.Integer(), nullable=False),
        sa.Column("stripe_price_id", sa.String(length=255), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("features", sa.Text(), nullable=True),
        sa.Column("ai_quota", sa.Integer(), nullable=False),
        sa.Column("gpt4o_requests_quota", sa.Integer(), nullable=True),
        sa.Column("stt_requests_quota", sa.Integer(), nullable=True),
        sa.Column("tts_chars_quota", sa.Integer(), nullable=True),
        sa.Column("pronunciation_analysis_quota", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("stripe_price_id"),
    )
    with op.batch_alter_table("subscription_plans", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_subscription_plans_id"), ["id"], unique=False
        )

    op.create_table(
        "tests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("test_type", sa.String(length=50), nullable=False),
        sa.Column("duration_minutes", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("tests", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_tests_id"), ["id"], unique=False)

    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column(
            "hashed_refresh_token", sa.String(length=255), nullable=True
        ),
        sa.Column("refresh_token_expires_at", sa.DateTime(), nullable=True),
        sa.Column("phone_number", sa.String(length=50), nullable=True),
        sa.Column("full_name", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_teacher", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("trial_ends_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "gpt4o_requests_used",
            sa.Integer(),
            server_default="0",
            nullable=False,
        ),
        sa.Column(
            "stt_requests_used",
            sa.Integer(),
            server_default="0",
            nullable=False,
        ),
        sa.Column(
            "tts_chars_used", sa.Integer(), server_default="0", nullable=False
        ),
        sa.Column(
            "pronunciation_analysis_used",
            sa.Integer(),
            server_default="0",
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_users_email"), ["email"], unique=True
        )
        batch_op.create_index(batch_op.f("ix_users_id"), ["id"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_users_phone_number"), ["phone_number"], unique=True
        )
        batch_op.create_index(
            batch_op.f("ix_users_username"), ["username"], unique=True
        )

    op.create_table(
        "admin_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("admin_id", sa.Integer(), nullable=False),
        sa.Column("action", sa.String(length=100), nullable=False),
        sa.Column("entity_type", sa.String(length=50), nullable=True),
        sa.Column("entity_id", sa.Integer(), nullable=True),
        sa.Column("details", sa.JSON(), nullable=True),
        sa.Column("ip_address", sa.String(length=50), nullable=True),
        sa.Column("user_agent", sa.String(length=100), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["admin_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("admin_logs", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_admin_logs_id"), ["id"], unique=False
        )

    op.create_table(
        "courses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("short_description", sa.String(length=500), nullable=True),
        sa.Column("thumbnail_url", sa.String(length=500), nullable=True),
        sa.Column("is_published", sa.Boolean(), nullable=True),
        sa.Column("is_featured", sa.Boolean(), nullable=True),
        sa.Column("difficulty_level", sa.String(length=50), nullable=True),
        sa.Column("estimated_duration", sa.Integer(), nullable=True),
        sa.Column("language", sa.String(length=50), nullable=True),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column("discount_price", sa.Float(), nullable=True),
        sa.Column("instructor_id", sa.Integer(), nullable=True),
        sa.Column("category", sa.String(length=100), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("requirements", sa.JSON(), nullable=True),
        sa.Column("learning_outcomes", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["instructor_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("courses", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_courses_id"), ["id"], unique=False
        )

    op.create_table(
        "feedbacks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("rating", sa.Float(), nullable=True),
        sa.Column("is_public", sa.Boolean(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("response", sa.Text(), nullable=True),
        sa.Column("response_by", sa.Integer(), nullable=True),
        sa.Column("response_date", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["response_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("feedbacks", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_feedbacks_id"), ["id"], unique=False
        )

    op.create_table(
        "forum_topics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("is_pinned", sa.Boolean(), nullable=True),
        sa.Column("is_closed", sa.Boolean(), nullable=True),
        sa.Column("author_id", sa.Integer(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["forum_categories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("forum_topics", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_forum_topics_id"), ["id"], unique=False
        )

    op.create_table(
        "notifications",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("is_read", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("notification_type", sa.String(length=50), nullable=False),
        sa.Column("data", sa.JSON(), nullable=True),
        sa.Column("payment_status", sa.String(length=20), nullable=True),
        sa.Column("payment_id", sa.String(length=100), nullable=True),
        sa.Column("payment_provider", sa.String(length=50), nullable=True),
        sa.Column("amount", sa.Integer(), nullable=True),
        sa.Column("currency", sa.String(length=3), nullable=True),
        sa.Column("receipt_url", sa.String(length=512), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("notifications", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_notifications_created_at"),
            ["created_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_id"), ["id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_is_read"), ["is_read"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_notification_type"),
            ["notification_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_payment_id"),
            ["payment_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_payment_status"),
            ["payment_status"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "payment_verifications",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("payment_proof_path", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("admin_notes", sa.String(), nullable=True),
        sa.Column("is_processed", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("processed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table(
        "payment_verifications", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_payment_verifications_id"), ["id"], unique=False
        )

    op.create_table(
        "pronunciation_sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("level", sa.String(), nullable=False),
        sa.Column("completed", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table(
        "pronunciation_sessions", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_pronunciation_sessions_id"), ["id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_pronunciation_sessions_level"),
            ["level"],
            unique=False,
        )

    op.create_table(
        "subscriptions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("plan_id", sa.Integer(), nullable=False),
        sa.Column("start_date", sa.DateTime(), nullable=True),
        sa.Column("end_date", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("payment_id", sa.String(length=100), nullable=True),
        sa.Column("payment_method", sa.String(length=50), nullable=True),
        sa.Column("amount_paid", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["plan_id"],
            ["subscription_plans.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("subscriptions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_subscriptions_id"), ["id"], unique=False
        )

    op.create_table(
        "test_attempts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("test_id", sa.Integer(), nullable=False),
        sa.Column(
            "start_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("time_spent_seconds", sa.Integer(), nullable=True),
        sa.Column("is_completed", sa.Boolean(), nullable=True),
        sa.Column("total_score", sa.Float(), nullable=True),
        sa.Column("max_score", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["test_id"],
            ["tests.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("test_attempts", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_test_attempts_id"), ["id"], unique=False
        )

    op.create_table(
        "test_sections",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("test_id", sa.Integer(), nullable=False),
        sa.Column("section_type", sa.String(length=50), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("instructions", sa.Text(), nullable=True),
        sa.Column("duration_minutes", sa.Integer(), nullable=False),
        sa.Column("order_index", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["test_id"],
            ["tests.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("test_sections", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_test_sections_id"), ["id"], unique=False
        )

    op.create_table(
        "test_sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("test_type", sa.String(length=50), nullable=False),
        sa.Column(
            "start_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("time_limit", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("total_score", sa.Float(), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("test_sessions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_test_sessions_id"), ["id"], unique=False
        )

    op.create_table(
        "user_ai_usage",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("usage_date", sa.DateTime(), nullable=False),
        sa.Column("gemini_requests", sa.Integer(), nullable=True),
        sa.Column("stt_requests", sa.Integer(), nullable=True),
        sa.Column("tts_characters", sa.Integer(), nullable=True),
        sa.Column("pronunciation_analysis", sa.Integer(), nullable=True),
        sa.Column("gpt4o_requests_left", sa.Integer(), nullable=True),
        sa.Column("tts_chars_left", sa.Integer(), nullable=True),
        sa.Column("stt_requests_left", sa.Integer(), nullable=True),
        sa.Column("pronunciation_analysis_left", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    with op.batch_alter_table("user_ai_usage", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_ai_usage_id"), ["id"], unique=False
        )

    op.create_table(
        "user_progress",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "level",
            sa.Enum(
                "BEGINNER",
                "ELEMENTARY",
                "PRE_INTERMEDIATE",
                "INTERMEDIATE",
                "UPPER_INTERMEDIATE",
                "ADVANCED",
                "PROFICIENT",
                name="userlevel",
            ),
            nullable=False,
        ),
        sa.Column("vocabulary_score", sa.Float(), nullable=True),
        sa.Column("grammar_score", sa.Float(), nullable=True),
        sa.Column("speaking_score", sa.Float(), nullable=True),
        sa.Column("listening_score", sa.Float(), nullable=True),
        sa.Column("total_lessons_completed", sa.Integer(), nullable=True),
        sa.Column("total_exercises_completed", sa.Integer(), nullable=True),
        sa.Column("total_time_spent", sa.Integer(), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user_progress", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_progress_id"), ["id"], unique=False
        )

    op.create_table(
        "user_pronunciation_profiles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("overall_score", sa.Float(), nullable=True),
        sa.Column("total_attempts", sa.Integer(), nullable=True),
        sa.Column("last_practice", sa.DateTime(timezone=True), nullable=True),
        sa.Column("common_errors", sa.JSON(), nullable=True),
        sa.Column("beginner_score", sa.Float(), nullable=True),
        sa.Column("intermediate_score", sa.Float(), nullable=True),
        sa.Column("advanced_score", sa.Float(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    with op.batch_alter_table(
        "user_pronunciation_profiles", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_pronunciation_profiles_id"),
            ["id"],
            unique=False,
        )

    op.create_table(
        "user_role",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
    )
    op.create_table(
        "video_analyses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("video_url", sa.String(length=512), nullable=False),
        sa.Column("thumbnail_url", sa.String(length=512), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=False),
        sa.Column("is_processed", sa.Boolean(), nullable=False),
        sa.Column("processing_status", sa.String(length=20), nullable=True),
        sa.Column("analysis_metadata", sa.JSON(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("video_analyses", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_video_analyses_id"), ["id"], unique=False
        )

    op.create_table(
        "certificates",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("course_id", sa.Integer(), nullable=True),
        sa.Column("course_name", sa.String(length=255), nullable=False),
        sa.Column("level_completed", sa.String(length=100), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("issue_date", sa.DateTime(), nullable=True),
        sa.Column("expiry_date", sa.DateTime(), nullable=True),
        sa.Column("verification_code", sa.String(length=100), nullable=False),
        sa.Column("is_valid", sa.Boolean(), nullable=True),
        sa.Column("file_path", sa.String(length=500), nullable=True),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("certificates", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_certificates_id"), ["id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_certificates_verification_code"),
            ["verification_code"],
            unique=True,
        )

    op.create_table(
        "enrollments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("course_id", sa.Integer(), nullable=False),
        sa.Column("enrollment_date", sa.DateTime(), nullable=True),
        sa.Column("completion_date", sa.DateTime(), nullable=True),
        sa.Column("progress", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("last_accessed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("enrollments", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_enrollments_id"), ["id"], unique=False
        )

    op.create_table(
        "forum_posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_edited", sa.Boolean(), nullable=True),
        sa.Column("topic_id", sa.Integer(), nullable=True),
        sa.Column("author_id", sa.Integer(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["forum_posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"], ["forum_topics.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("forum_posts", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_forum_posts_id"), ["id"], unique=False
        )

    op.create_table(
        "interactive_lessons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("video_url", sa.String(), nullable=True),
        sa.Column("content", sa.JSON(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("is_premium", sa.Boolean(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("estimated_duration", sa.Integer(), nullable=True),
        sa.Column("course_id", sa.Integer(), nullable=False),
        sa.Column("avatar_id", sa.Integer(), nullable=False),
        sa.Column(
            "difficulty",
            sa.Enum(
                "EASY", "MEDIUM", "HARD", "EXPERT", name="lessondifficulty"
            ),
            nullable=False,
        ),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["avatar_id"],
            ["ai_avatars.id"],
        ),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("interactive_lessons", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_interactive_lessons_id"), ["id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_interactive_lessons_title"), ["title"], unique=False
        )

    op.create_table(
        "pronunciation_attempts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=True),
        sa.Column("phrase_id", sa.Integer(), nullable=False),
        sa.Column("audio_file_path", sa.String(), nullable=True),
        sa.Column("recognized_text", sa.String(), nullable=True),
        sa.Column("expected_text", sa.String(), nullable=False),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("feedback", sa.Text(), nullable=True),
        sa.Column("analysis_data", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["phrase_id"],
            ["pronunciation_phrases.id"],
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["pronunciation_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table(
        "pronunciation_attempts", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_pronunciation_attempts_id"), ["id"], unique=False
        )

    op.create_table(
        "test_questions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.Column("question_type", sa.String(length=50), nullable=False),
        sa.Column("question_text", sa.Text(), nullable=False),
        sa.Column("question_data", sa.JSON(), nullable=True),
        sa.Column("audio_url", sa.String(), nullable=True),
        sa.Column("image_url", sa.String(), nullable=True),
        sa.Column("marks", sa.Float(), nullable=True),
        sa.Column("order_index", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["section_id"],
            ["test_sections.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("test_questions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_test_questions_id"), ["id"], unique=False
        )

    op.create_table(
        "video_segments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("video_analysis_id", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.Integer(), nullable=False),
        sa.Column("end_time", sa.Integer(), nullable=False),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["video_analysis_id"], ["video_analyses.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("video_segments", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_video_segments_id"), ["id"], unique=False
        )

    op.create_table(
        "exercises",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("question", sa.Text(), nullable=False),
        sa.Column(
            "exercise_type",
            sa.Enum(
                "MULTIPLE_CHOICE",
                "FILL_IN_BLANK",
                "MATCHING",
                "TRUE_FALSE",
                "SHORT_ANSWER",
                "ESSAY",
                "LISTENING",
                "SPEAKING",
                "TRANSLATION",
                "DICTATION",
                name="exercisetype",
            ),
            nullable=False,
        ),
        sa.Column(
            "difficulty",
            sa.Enum(
                "BEGINNER",
                "ELEMENTARY",
                "PRE_INTERMEDIATE",
                "INTERMEDIATE",
                "UPPER_INTERMEDIATE",
                "ADVANCED",
                "PROFICIENCY",
                name="difficultylevel",
            ),
            nullable=False,
        ),
        sa.Column("correct_answer", sa.JSON(), nullable=False),
        sa.Column("explanation", sa.Text(), nullable=True),
        sa.Column("options", sa.JSON(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("lesson_id", sa.Integer(), nullable=True),
        sa.Column("audio_url", sa.String(length=512), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["interactive_lessons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("exercises", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_exercises_id"), ["id"], unique=False
        )

    op.create_table(
        "homeworks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("instructions", sa.Text(), nullable=True),
        sa.Column(
            "homework_type",
            sa.Enum("WRITTEN", "ORAL", "QUIZ", "PROJECT", name="homeworktype"),
            nullable=False,
        ),
        sa.Column("course_id", sa.Integer(), nullable=False),
        sa.Column("lesson_id", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.Column("due_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("max_score", sa.Integer(), nullable=False),
        sa.Column("is_published", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["course_id"], ["courses.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"], ["users.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["lesson_id"], ["interactive_lessons.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("homeworks", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_homeworks_id"), ["id"], unique=False
        )

    op.create_table(
        "lesson_sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("lesson_id", sa.Integer(), nullable=False),
        sa.Column(
            "start_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["interactive_lessons.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("lesson_sessions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_lesson_sessions_id"), ["id"], unique=False
        )

    op.create_table(
        "pronunciation_analysis_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("attempt_id", sa.Integer(), nullable=False),
        sa.Column("word_level_analysis", sa.JSON(), nullable=True),
        sa.Column("phoneme_analysis", sa.JSON(), nullable=True),
        sa.Column("prosody_analysis", sa.JSON(), nullable=True),
        sa.Column("error_patterns", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["attempt_id"],
            ["pronunciation_attempts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table(
        "pronunciation_analysis_results", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_pronunciation_analysis_results_id"),
            ["id"],
            unique=False,
        )

    op.create_table(
        "test_answers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("attempt_id", sa.Integer(), nullable=False),
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("answer_data", sa.Text(), nullable=True),
        sa.Column("is_correct", sa.Boolean(), nullable=True),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("feedback", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["attempt_id"],
            ["test_attempts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["test_questions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("test_answers", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_test_answers_id"), ["id"], unique=False
        )

    op.create_table(
        "user_lesson_completions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("lesson_id", sa.Integer(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["interactive_lessons.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table(
        "user_lesson_completions", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_lesson_completions_id"), ["id"], unique=False
        )

    op.create_table(
        "user_lesson_progress",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("lesson_id", sa.Integer(), nullable=False),
        sa.Column("is_completed", sa.Boolean(), nullable=False),
        sa.Column("score", sa.Float(), nullable=False),
        sa.Column("time_spent", sa.Integer(), nullable=False),
        sa.Column("last_accessed", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["lesson_id"], ["interactive_lessons.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user_lesson_progress", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_lesson_progress_id"), ["id"], unique=False
        )

    op.create_table(
        "video_questions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("segment_id", sa.Integer(), nullable=False),
        sa.Column("question_type", sa.String(length=50), nullable=False),
        sa.Column("question_text", sa.Text(), nullable=False),
        sa.Column("options", sa.JSON(), nullable=True),
        sa.Column("correct_answer", sa.JSON(), nullable=False),
        sa.Column("explanation", sa.Text(), nullable=True),
        sa.Column("difficulty", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["segment_id"], ["video_segments.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("video_questions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_video_questions_id"), ["id"], unique=False
        )

    op.create_table(
        "words",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word", sa.String(length=100), nullable=False),
        sa.Column("translation", sa.String(length=255), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=True),
        sa.Column("level", sa.String(length=20), nullable=True),
        sa.Column("part_of_speech", sa.String(length=50), nullable=True),
        sa.Column("ipa_pronunciation", sa.String(length=100), nullable=True),
        sa.Column("audio_url", sa.String(length=500), nullable=True),
        sa.Column("image_url", sa.String(length=500), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("lesson_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["interactive_lessons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("words", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_words_id"), ["id"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_words_word"), ["word"], unique=False
        )

    op.create_table(
        "exercise_attempts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("exercise_id", sa.Integer(), nullable=False),
        sa.Column("user_answer", sa.JSON(), nullable=False),
        sa.Column("is_correct", sa.Boolean(), nullable=False),
        sa.Column("score", sa.Float(), nullable=False),
        sa.Column("feedback", sa.JSON(), nullable=True),
        sa.Column("time_spent", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["exercise_id"],
            ["exercises.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("exercise_attempts", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_exercise_attempts_id"), ["id"], unique=False
        )

    op.create_table(
        "exercise_set_items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("exercise_set_id", sa.Integer(), nullable=False),
        sa.Column("exercise_id", sa.Integer(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=True),
        sa.Column("points", sa.Integer(), nullable=True),
        sa.Column("required", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["exercise_id"],
            ["exercises.id"],
        ),
        sa.ForeignKeyConstraint(
            ["exercise_set_id"],
            ["exercise_sets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("exercise_set_items", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_exercise_set_items_id"), ["id"], unique=False
        )

    op.create_table(
        "homework_submissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("homework_id", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("file_url", sa.String(length=512), nullable=True),
        sa.Column("audio_url", sa.String(length=512), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "SUBMITTED",
                "LATE",
                "GRADED",
                "RETURNED",
                name="homeworkstatus",
            ),
            nullable=False,
        ),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("feedback", sa.Text(), nullable=True),
        sa.Column(
            "submitted_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("graded_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("graded_by", sa.Integer(), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["graded_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["homework_id"],
            ["homeworks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("homework_submissions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_homework_submissions_id"), ["id"], unique=False
        )

    op.create_table(
        "lesson_interactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("user_input", sa.Text(), nullable=False),
        sa.Column("ai_response", sa.Text(), nullable=False),
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["lesson_sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("lesson_interactions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_lesson_interactions_id"), ["id"], unique=False
        )

    op.create_table(
        "oral_assignments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("homework_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("topic", sa.String(length=255), nullable=False),
        sa.Column("time_limit", sa.Integer(), nullable=True),
        sa.Column("questions", sa.JSON(), nullable=True),
        sa.Column("criteria", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["homework_id"],
            ["homeworks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("homework_id"),
    )
    with op.batch_alter_table("oral_assignments", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_oral_assignments_id"), ["id"], unique=False
        )

    op.create_table(
        "test_responses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("test_session_id", sa.Integer(), nullable=False),
        sa.Column("exercise_id", sa.Integer(), nullable=False),
        sa.Column("user_answer", sa.JSON(), nullable=True),
        sa.Column("is_correct", sa.Boolean(), nullable=True),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("feedback", sa.JSON(), nullable=True),
        sa.Column("time_spent", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["exercise_id"],
            ["exercises.id"],
        ),
        sa.ForeignKeyConstraint(
            ["test_session_id"],
            ["test_sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("test_responses", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_test_responses_id"), ["id"], unique=False
        )

    op.create_table(
        "word_antonyms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word_id", sa.Integer(), nullable=False),
        sa.Column("antonym", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["word_id"],
            ["words.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("word_antonyms", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_word_antonyms_id"), ["id"], unique=False
        )

    op.create_table(
        "word_definitions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word_id", sa.Integer(), nullable=False),
        sa.Column("definition", sa.Text(), nullable=False),
        sa.Column("part_of_speech", sa.String(length=50), nullable=True),
        sa.Column("example", sa.Text(), nullable=True),
        sa.Column("is_primary", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["word_id"],
            ["words.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("word_definitions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_word_definitions_id"), ["id"], unique=False
        )

    op.create_table(
        "word_examples",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word_id", sa.Integer(), nullable=False),
        sa.Column("example", sa.Text(), nullable=False),
        sa.Column("translation", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["word_id"],
            ["words.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("word_examples", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_word_examples_id"), ["id"], unique=False
        )

    op.create_table(
        "word_synonyms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word_id", sa.Integer(), nullable=False),
        sa.Column("synonym", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["word_id"],
            ["words.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("word_synonyms", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_word_synonyms_id"), ["id"], unique=False
        )

    op.create_table(
        "homework_feedback",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("submission_id", sa.Integer(), nullable=False),
        sa.Column("criteria_scores", sa.JSON(), nullable=True),
        sa.Column("comments", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["homework_submissions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("homework_feedback", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_homework_feedback_id"), ["id"], unique=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("homework_feedback", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_homework_feedback_id"))

    op.drop_table("homework_feedback")
    with op.batch_alter_table("word_synonyms", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_word_synonyms_id"))

    op.drop_table("word_synonyms")
    with op.batch_alter_table("word_examples", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_word_examples_id"))

    op.drop_table("word_examples")
    with op.batch_alter_table("word_definitions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_word_definitions_id"))

    op.drop_table("word_definitions")
    with op.batch_alter_table("word_antonyms", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_word_antonyms_id"))

    op.drop_table("word_antonyms")
    with op.batch_alter_table("test_responses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_test_responses_id"))

    op.drop_table("test_responses")
    with op.batch_alter_table("oral_assignments", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_oral_assignments_id"))

    op.drop_table("oral_assignments")
    with op.batch_alter_table("lesson_interactions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_lesson_interactions_id"))

    op.drop_table("lesson_interactions")
    with op.batch_alter_table("homework_submissions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_homework_submissions_id"))

    op.drop_table("homework_submissions")
    with op.batch_alter_table("exercise_set_items", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_exercise_set_items_id"))

    op.drop_table("exercise_set_items")
    with op.batch_alter_table("exercise_attempts", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_exercise_attempts_id"))

    op.drop_table("exercise_attempts")
    with op.batch_alter_table("words", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_words_word"))
        batch_op.drop_index(batch_op.f("ix_words_id"))

    op.drop_table("words")
    with op.batch_alter_table("video_questions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_video_questions_id"))

    op.drop_table("video_questions")
    with op.batch_alter_table("user_lesson_progress", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_lesson_progress_id"))

    op.drop_table("user_lesson_progress")
    with op.batch_alter_table(
        "user_lesson_completions", schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_lesson_completions_id"))

    op.drop_table("user_lesson_completions")
    with op.batch_alter_table("test_answers", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_test_answers_id"))

    op.drop_table("test_answers")
    with op.batch_alter_table(
        "pronunciation_analysis_results", schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f("ix_pronunciation_analysis_results_id"))

    op.drop_table("pronunciation_analysis_results")
    with op.batch_alter_table("lesson_sessions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_lesson_sessions_id"))

    op.drop_table("lesson_sessions")
    with op.batch_alter_table("homeworks", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_homeworks_id"))

    op.drop_table("homeworks")
    with op.batch_alter_table("exercises", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_exercises_id"))

    op.drop_table("exercises")
    with op.batch_alter_table("video_segments", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_video_segments_id"))

    op.drop_table("video_segments")
    with op.batch_alter_table("test_questions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_test_questions_id"))

    op.drop_table("test_questions")
    with op.batch_alter_table(
        "pronunciation_attempts", schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f("ix_pronunciation_attempts_id"))

    op.drop_table("pronunciation_attempts")
    with op.batch_alter_table("interactive_lessons", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_interactive_lessons_title"))
        batch_op.drop_index(batch_op.f("ix_interactive_lessons_id"))

    op.drop_table("interactive_lessons")
    with op.batch_alter_table("forum_posts", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_forum_posts_id"))

    op.drop_table("forum_posts")
    with op.batch_alter_table("enrollments", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_enrollments_id"))

    op.drop_table("enrollments")
    with op.batch_alter_table("certificates", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_certificates_verification_code"))
        batch_op.drop_index(batch_op.f("ix_certificates_id"))

    op.drop_table("certificates")
    with op.batch_alter_table("video_analyses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_video_analyses_id"))

    op.drop_table("video_analyses")
    op.drop_table("user_role")
    with op.batch_alter_table(
        "user_pronunciation_profiles", schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_pronunciation_profiles_id"))

    op.drop_table("user_pronunciation_profiles")
    with op.batch_alter_table("user_progress", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_progress_id"))

    op.drop_table("user_progress")
    with op.batch_alter_table("user_ai_usage", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_ai_usage_id"))

    op.drop_table("user_ai_usage")
    with op.batch_alter_table("test_sessions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_test_sessions_id"))

    op.drop_table("test_sessions")
    with op.batch_alter_table("test_sections", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_test_sections_id"))

    op.drop_table("test_sections")
    with op.batch_alter_table("test_attempts", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_test_attempts_id"))

    op.drop_table("test_attempts")
    with op.batch_alter_table("subscriptions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_subscriptions_id"))

    op.drop_table("subscriptions")
    with op.batch_alter_table(
        "pronunciation_sessions", schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f("ix_pronunciation_sessions_level"))
        batch_op.drop_index(batch_op.f("ix_pronunciation_sessions_id"))

    op.drop_table("pronunciation_sessions")
    with op.batch_alter_table(
        "payment_verifications", schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f("ix_payment_verifications_id"))

    op.drop_table("payment_verifications")
    with op.batch_alter_table("notifications", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_notifications_user_id"))
        batch_op.drop_index(batch_op.f("ix_notifications_payment_status"))
        batch_op.drop_index(batch_op.f("ix_notifications_payment_id"))
        batch_op.drop_index(batch_op.f("ix_notifications_notification_type"))
        batch_op.drop_index(batch_op.f("ix_notifications_is_read"))
        batch_op.drop_index(batch_op.f("ix_notifications_id"))
        batch_op.drop_index(batch_op.f("ix_notifications_created_at"))

    op.drop_table("notifications")
    with op.batch_alter_table("forum_topics", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_forum_topics_id"))

    op.drop_table("forum_topics")
    with op.batch_alter_table("feedbacks", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_feedbacks_id"))

    op.drop_table("feedbacks")
    with op.batch_alter_table("courses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_courses_id"))

    op.drop_table("courses")
    with op.batch_alter_table("admin_logs", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_admin_logs_id"))

    op.drop_table("admin_logs")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_username"))
        batch_op.drop_index(batch_op.f("ix_users_phone_number"))
        batch_op.drop_index(batch_op.f("ix_users_id"))
        batch_op.drop_index(batch_op.f("ix_users_email"))

    op.drop_table("users")
    with op.batch_alter_table("tests", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_tests_id"))

    op.drop_table("tests")
    with op.batch_alter_table("subscription_plans", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_subscription_plans_id"))

    op.drop_table("subscription_plans")
    with op.batch_alter_table("roles", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_roles_name"))
        batch_op.drop_index(batch_op.f("ix_roles_id"))

    op.drop_table("roles")
    with op.batch_alter_table(
        "pronunciation_phrases", schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f("ix_pronunciation_phrases_text"))
        batch_op.drop_index(batch_op.f("ix_pronunciation_phrases_level"))
        batch_op.drop_index(batch_op.f("ix_pronunciation_phrases_id"))
        batch_op.drop_index(batch_op.f("ix_pronunciation_phrases_category"))

    op.drop_table("pronunciation_phrases")
    with op.batch_alter_table("forum_categories", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_forum_categories_id"))

    op.drop_table("forum_categories")
    with op.batch_alter_table("exercise_sets", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_exercise_sets_id"))

    op.drop_table("exercise_sets")
    with op.batch_alter_table("ai_avatars", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_ai_avatars_name"))
        batch_op.drop_index(batch_op.f("ix_ai_avatars_id"))

    op.drop_table("ai_avatars")
    # ### end Alembic commands ###
